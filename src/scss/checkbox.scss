@mixin can-toggle-branding(
    $can-toggle-off-color: rgb(239, 42, 42), 
    $can-toggle-on-color: #005d5d,
    $can-toggle-inactive-text:rgba(241, 241, 241, 1),
    $can-toggle-transition: cubic-bezier(0,1,0.5,1)
  ) {
    input[type="checkbox"] {
      &[disabled] ~ label {
        color: rgba($can-toggle-off-color, 1);
      }
      &:focus ~ label, &:hover ~ label {
        .can-toggle__switch {
          background-color: $can-toggle-off-color;
          &:after { color: darken($can-toggle-off-color, 10%); }
        }
      }
      &:hover ~label { color: darken($can-toggle-off-color, 5%); }
      &:checked {
        ~ label {
          &:hover { color: darken($can-toggle-on-color, 3%); }
          .can-toggle__switch {
            background-color: lighten($can-toggle-on-color, 5%);
            &:after { color: darken($can-toggle-on-color, 5%); }
          }
        }
        &:focus, &:hover {
          ~ label {
            .can-toggle__switch {
              background-color: $can-toggle-on-color;
              &:after { color: darken($can-toggle-on-color, 10%); }
            }
          } 
        }
      }
    }
    label {
        cursor: pointer;
      .can-toggle__label-text { flex: 1;}
      .can-toggle__switch {
        transition:  all 0.3s ease 0s;;
        background: lighten($can-toggle-off-color, 5%);
        &:before { color: $can-toggle-inactive-text; }
        &:after {
          // Autoprefixer choked here, so making the prefixes explicit
          -webkit-transition: -webkit-transform all 0.3s ease 0s;;
          transition:  all 0.3s ease 0s;
          color: $can-toggle-off-color; 
        }
      }
    }
  }
  
  @mixin can-toggle-appearance 
  ( 
    $can-toggle-width: 250px,
    $can-toggle-height: 54px,
    $can-toggle-border-radius: 2px,
    $can-toggle-offset: 2px,
    $can-toggle-label-font-size: 16px,
    $can-toggle-switch-font-size: 16px,
    $can-toggle-shadow: none
  ){
    $can-toggle-switch-width: calc($can-toggle-width / 2);
    input[type="checkbox"] {
      &:focus ~ label, &:hover ~ label {
        .can-toggle__switch {
          &:after { box-shadow: $can-toggle-shadow; } 
        }
      }
      &:checked {
        ~ label {
          .can-toggle__switch {
            &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
          }
        }
        &:focus, &:hover {
          ~ label {
            .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
          } 
        }
      }
    }
    label {
      font-size: $can-toggle-label-font-size;
      .can-toggle__switch {
        height: $can-toggle-height;
        
        border-radius: $can-toggle-border-radius;
       
        &:before {
          left: calc($can-toggle-width / 2);
          font-size: $can-toggle-switch-font-size; 
          line-height: $can-toggle-height;
          width: calc($can-toggle-width / 2);
          padding: 0 12px;
        }
        &:after {
          top: $can-toggle-offset; left: $can-toggle-offset;
          border-radius: calc($can-toggle-border-radius / 2);
          width: $can-toggle-switch-width - $can-toggle-offset; 
          line-height: $can-toggle-height - ($can-toggle-offset*2);
          font-size: $can-toggle-switch-font-size;
        }
        &:hover {
          &:after { box-shadow: $can-toggle-shadow; }
        }
      } 
    }
  }
  .can-toggle {
    position: relative;
    *, *:before, *:after { box-sizing: border-box; }
    //overflow: hidden;
    input[type="checkbox"] {
      opacity: 0;
      position: absolute;
      top: 0; left: 0;
      
      &[disabled] ~ label {
        pointer-events: none;
        .can-toggle__switch { opacity: 0.4; }
      }
      &:checked {
        ~ label {
          .can-toggle__switch {

            &:before {
              content: attr(data-unchecked);
              left: 0;
              
        
            }
            &:after {
              content: attr(data-checked);
          
            }  
          }
        }
        &:focus, &:hover {
          ~ label {
            
          } 
        }
      }
    }
    label {
      user-select: none;
      position: relative;
      display: flex;
      align-items: center;
      font-weight: 700;
      font-family: 'Gilroy';
  
      .can-toggle__label-text { 
        flex: 1;
        padding-left: 32px;
      }
      .can-toggle__switch {
        position: relative;
        &:before {
          content: attr(data-checked);
          position: absolute;
          top: 0;
   
          text-align: center;
        }
        &:after {
          content: attr(data-unchecked);
          position: absolute;
          z-index: 5;

          text-align: center;
          background: white;
          transform: translate3d(0,0,0);
        }
      }
    }
    &.demo-rebrand-2 {
      @include can-toggle-branding
      (
        rgb(26, 24, 24, 0.9),  // Off state color
        rgb(26, 24, 24, 0.9),  // On state color
        rgba(rgb(241, 241, 241), 1),  // Off state text color
        cubic-bezier(0.860, 0.000, 0.070, 1.000)  // Transition timing function
      );
      @include can-toggle-appearance
      (
        250px, // Toggle width
        50px,  // Toggle height
        100px,   // Toggle border radius
        -1px,   // Offset (distance btw switch and box)
        16px,  // Label font size
        16px,  // Switch font size
        0 4px 4px rgba(black, 0) // Switch shadow on hover/focus
      );
      
    @media (max-width:740px) {
      @include can-toggle-appearance
      (
        180px, // Toggle width
        40px,  // Toggle height
        100px,   // Toggle border radius
        -1px,   // Offset (distance btw switch and box)
        12px,  // Label font size
        12px,  // Switch font size
        0 4px 4px rgba(black, 0) // Switch shadow on hover/focus
      );
    } 
    @media (max-width:580px) {
      @include can-toggle-appearance
      (
        160px, // Toggle width
        40px,  // Toggle height
        100px,   // Toggle border radius
        -1px,   // Offset (distance btw switch and box)
        12px,  // Label font size
        12px,  // Switch font size
        0 4px 4px rgba(black, 0) // Switch shadow on hover/focus
      );
    } 
    @media (max-width:440px) {
      @include can-toggle-appearance
      (
        120px, // Toggle width
        35px,  // Toggle height
        100px,   // Toggle border radius
        -1px,   // Offset (distance btw switch and box)
        10px,  // Label font size
        8px,  // Switch font size
        0 4px 4px rgba(black, 0) // Switch shadow on hover/focus
      );
    } 
    }
}
.checkbox__border{
    border: 2px solid rgba(241, 241, 241, 1);
    width: 254px;
    height: 54px;
    border-radius: 30px;
    @media (max-width:740px) {
      width: 180px;
      height: 43px;
    }
    @media (max-width:580px) {
      width: 160px;
      height: 43px;
    }
    @media (max-width:440px) {
      width: 120px;
      height: 38px;
    }
}